<!-- Edited version of the analyzify-gtm-body that is kept around to track atc -->
<!-- Added with Analyzify V2.3 - Dec 9, 2022 11:59 am -->

{%- if shop.permanent_domain contains "airmovers-devoff.myshopify.com" -%}
    <!-- Google Tag Manager -->
    <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
                new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
            j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
            'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
        })(window,document,'script','dataLayer','GTM-PRKF7JW');</script>
    <!-- End Google Tag Manager -->
{%- else -%}
    <!-- Google Tag Manager -->
    <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
                new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
            j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
            'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
        })(window,document,'script','dataLayer','{{ shop.metafields.gtm.tracking_id }}');</script>
    <!-- End Google Tag Manager -->
{%- endif -%}
<script type="text/javascript">
    window.dataLayer = window.dataLayer || [];
    window.analyzify = {
        "pageFly" : false, //Set this true if you are using PageFly in your website
        "send_unhashed_email": false, //Set this true if you would like to collect unhashed email address of logged in users.
        "g_feed_region": "US", //Change this if your Google Ads feed is in another region
        //Modify the following button attributes if you do not see any ee_addToCart datalayer event when you click add to cart button in any product detail page.
        "addtocart_btn_attributes": {
            "class": ["shopify-payment-button"],
        },
        //Modify the following element attribute if you see that quantity being pushed to datalayer is wrong when you try to add the a product to the cart with more than 1 as quantity.
        "product_quantity":{
            "name": ["quantity"]
        },
        //Modify the following button attributes if you do not see any ee_removeFromCart datalayer event when you remove any item from the cart in the cart page.
        "removefromcart_btn_attributes": {
            "data-remove-item": ["cart-template"],
            "data-cart-remove": ["Remove"],
            "aria-label": ["Remove"],
            "class": ["cart__remove-btn", "cart__remove", "cart__removee", "cart-item__remove", "item-remove"],
            "id": [],
            "href": ["/cart/change?id=", "/cart/change?line="]
        },
        //Modify the following button attributes if you do not see ee_checkout datalayer event when you click "checkout" button in the cart page or cart drawer.
        "checkout_btn_attributes": {
            "name": ["checkout"],
            "class": ["checkout-btn", "upcart-checkout-button", "cart__submit"],
            "href": ["/checkout"]
        },
        //Modify the following button attributes if you do not see any ee_productClick datalayer event when you click to a product in collection pages.
        "collection_prod_click_attributes":{
            "href": ["/products/"]
        },
        //Modify the following button attributes if you do not see any ee_addToCart datalayer event when you click add to cart button in any collection pages.
        "collection_atc_attributes":{
        },
        //Modify the following button attributes if you do not see any ee_productClick datalayer event when you click to a product in search result pages.
        "search_prod_click_attributes":{
            "href": ["/products/"]
        },
        "version": "2.31", //Analyzify version installed to this store
        "logging": false, //Enable this to see Analyzify logs in console
        "logs": [],
        "stopAtLog": false //To use a debugger while logging
    };

    analyzify.log = function(t) {
        if (window.analyzify.logging == true && t !== null) {
            if (typeof(t) == "object") {
                window.console.log("** Analyzify Logger:");
                window.console.log(t);
            } else {
                window.console.log("** Analyzify Logger: " + t);
            }

            analyzify.logs.push(t);
            if (analyzify.stopAtLog == true) {
                debugger;
            }
        }
    };
    window.analyzify.Initialize = function() {
        window.analyzify.loadScript = function(callback) {
            callback();
        }

        window.analyzify.AppStart = function(){

            var detected_cart = {{ cart | json}};
            var detected_currency = detected_cart.currency;

            {% assign template_name = template.name %}



            {% capture collectionInfos %}
            var collection = {{ collection | json }};
            var collectionAllProducts = {{ collection.products | json }};
            var collectionTitle = `{{ collection.title | remove: "'" | remove: '"' }}`;
            var collectionId = `{{ collection.id }}`;
            var collectionProductsBrand = [];
            var collectionProductsType = [];
            var collectionProductsSku = [];
            var collectionProductsName = [];
            var collectionProductsId = [];
            var collectionProductsPrice = [];
            var collectionProductsPosition = []; // we need to talk about, this data can be taken from DOM only (filter ON/OFF)
            var collectionGproductId = [];
            var collectionVariantId = [];
            var collectionVariantTitle = [];
            {% endcapture %}


            {% capture searchInfos %}
            var searchTerm = `{{ search.terms }}`;
            var searchResults = parseInt(`{{ search.results_count }}`);
            var searchResultsJson = {{ search.results | json }};
            var searchProductsBrand = [];
            var searchProductsType = [];
            var searchProductsSku = [];
            var searchProductsNames = [];
            var searchProductsIds = [];
            var searchProductsPrices = [];
            var searchProductsPosition = [];
            var searchGproductId = [];
            var searchVariantId = [];
            var searchVariantTitle = [];
            {% endcapture %}



            var productJson = {{ product | json}};

            {% capture productInfos %}
            var productName = `{{ product.title | remove: "'" | remove: '"' }}`;
            var productId = `{{ product.id }}`;
            var productPrice = `{{ product.variants.first.price | times: 0.01 }}`;
            var productBrand = `{{ product.vendor | remove: "'" | remove: '"' }}`;
            var productType = `{{ product.type | remove: "'" | remove: '"' }}`;
            var productSku = `{{ product.selected_or_first_available_variant.sku | remove: "'" | remove: '"' }}`;
            var collectionTitle = `{{ product.collections.last.title | remove: "'" | remove: '"' }}`;
            var collectionId = `{{ product.collections.last.id | remove: "'" | remove: '"' }}`;
            {% endcapture %}



            var cartItemsJson = {{ cart | json }};



            var found_element = [];
            var found_atc_element_form = [];

            window.findElemInPath = function(pth_arr, attr_obj) {
                var i;
                var btn_found = null;

                for (i = 0; i < pth_arr.length; i++) {
                    for (var k in attr_obj) {
                        if (attr_obj.hasOwnProperty(k)) {
                            var attribute_name = k;
                            var attribute_values = attr_obj[k];

                            if (pth_arr[i].hasAttribute !== undefined) {
                                if (pth_arr[i].hasAttribute(attribute_name) == true) {
                                    attribute_values.forEach(function(selected_value) {
                                        if (pth_arr[i].getAttribute(attribute_name).indexOf(selected_value) > -1) {
                                            analyzify.log(selected_value + " found in " + attribute_name + " attribute list.");
                                            btn_found = pth_arr[i];
                                            found_element.push(pth_arr[i]);
                                            found_atc_element_form.push(pth_arr[i].closest("form[action='/cart/add']"));
                                        }
                                    });
                                }
                            }
                        }
                    }
                }
                return btn_found;
            }

            document.addEventListener("click", (event) => {
                found_element = [];
                found_atc_element_form = [];
                var checkout_elem = window.findElemInPath(event.composedPath(), analyzify.checkout_btn_attributes);
                var rfc_elem = window.findElemInPath(event.composedPath(), analyzify.removefromcart_btn_attributes);
                {% case template_name %}
                {%- when 'product' -%}
                var atc_elem = window.findElemInPath(event.composedPath(), analyzify.addtocart_btn_attributes);
                {% when 'collection' %}
                var col_prod_click_elem = window.findElemInPath(event.composedPath(), analyzify.collection_prod_click_attributes);
                var coll_atc_elem = window.findElemInPath(event.composedPath(), analyzify.collection_atc_attributes);
                {% when 'search' %}
                var search_prod_click_elem = window.findElemInPath(event.composedPath(), analyzify.search_prod_click_attributes);
                {% endcase %}
                if(event.target.classList.contains('product-form--atc-button') || event.target.closest('.product-form--atc-button')){
                    analyzify.quickViewAtcEventFunc(event);
                }

                if(event.target.classList.contains('productitem--action-atc') || event.target.closest('.productitem--action-atc')){
                    // alert('test1');
                    analyzify.quickShopAtcEventFunc(event);

                }

                        {%- case template_name -%}
                        {%- when 'product' -%}
                else if(atc_elem !== null) {
                    if(atc_elem.dataset['shopify'] == "payment-button") {
                        analyzify.atcEventFuncFinance();
                    }
                }
                        {%- when 'collection' -%}
                else if(col_prod_click_elem !== null){

                }else if(coll_atc_elem !== null) {
                    analyzify.collAtcEventFunc();
                }
                        {%- when 'search' -%}
                else if(search_prod_click_elem !== null){
                }
                        {% endcase %}
                else{
                    analyzify.log("The clicked button/link was not a addtocart, removefromcart or checkout button.");
                    analyzify.log(event);
                }
            });



            {% case template_name %}
            {% when 'product' %}
            window.onload = function(){
                if( analyzify.pageFly == true){
                    var element = document.querySelector('[data-pf-type="ProductATC"]');
                    element.setAttribute("onclick", "analyzify.atcEventFunc()");
                }
            }
            {% endcase %}

            window.analyzify.atcEventFuncFinance = function(){

                {{ productInfos }}

                var formElement = found_atc_element_form[0];
                if( analyzify.pageFly == false){
                    if(formElement){
                        if(Array.from(formElement.elements).find(item => item.name == 'id')){
                            var formVariantInput = Array.from(formElement.elements).find(item => item.name == 'id').value;
                        }
                    }
                }

                var initial_url = window.location.href;
j
                if (formVariantInput){
                    var variantInput = formVariantInput;
                } else if(initial_url.includes("variant=")){
                    var variantInput = initial_url.split( 'variant=' )[1];
                } else{
                    var variantInput = '{{ product.selected_or_first_available_variant.id }}';
                }

                for (let i = 0; i < productJson.variants.length; i++) {
                    if(productJson.variants[i].id == variantInput){
                        var productPrice = productJson.variants[i].price;
                        var variantSku = productJson.variants[i].sku;
                        var variantName = productJson.variants[i].public_title;
                    }
                }

                var found_qty = [];

                window.findQty = function(attr_obj) {
                    found_qty = [];
                    for (var k in attr_obj) {
                        if (attr_obj.hasOwnProperty(k)) {
                            var attribute_name = k;
                            var attribute_values = attr_obj[k];
                            var qtyEl = document.querySelector('['+attribute_name+'="'+attribute_values+'"]');
                            if(qtyEl && qtyEl.value){
                                found_qty.push(qtyEl.value);
                            }
                        }
                    }
                }

                window.findQty(analyzify.product_quantity);

                if (found_qty.length > 0) {
                    var prodQty = found_qty[0];
                } else{
                    var prodQty = 1;
                }

                window.dataLayer.push({
                    event: 'ee_addToCart',
                    product_name: productName,
                    product_id: productId,
                    product_price: (productPrice / 100).toFixed(2).toString(),
                    currency: detected_currency,
                    product_brand: productBrand,
                    product_type: productType,
                    category_id: collectionId,
                    category_title: collectionTitle,
                    quantity: prodQty,
                    variant_id: variantInput,
                    variant_title: variantName,
                    product_sku : variantSku,
                    g_product_id: `shopify_`+ analyzify.g_feed_region +`_`+productId+`_`+variantInput,
                    atc_loc: "ShopPay"
                });

                var name = "atcloc";
                var thisCookie = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
                if (thisCookie){
                    var newCookieVal = thisCookie[2] + "::"+variantSku+":"+"ShopPay";
                }else{
                    var newCookieVal = variantSku+":"+"ShopPay";
                }
                document.cookie = "atcloc="+newCookieVal+"; expires=0; path=/";

                // alert('weeeeee3'+window.dataLayer);
                // console.log(window.dataLayer);
                analyzify.log("Product ee_addToCart==>");
                analyzify.log(window.dataLayer);
            }

            window.analyzify.atcEventFunc = function(){

                {{ productInfos }}

                var formElement = found_atc_element_form[0];
                if( analyzify.pageFly == false){
                    if(formElement){
                        if(Array.from(formElement.elements).find(item => item.name == 'id')){
                            var formVariantInput = Array.from(formElement.elements).find(item => item.name == 'id').value;
                        }
                    }
                }

                var initial_url = window.location.href;

                if (formVariantInput){
                    var variantInput = formVariantInput;
                } else if(initial_url.includes("variant=")){
                    var variantInput = initial_url.split( 'variant=' )[1];
                } else{
                    var variantInput = '{{ product.selected_or_first_available_variant.id }}';
                }

                for (let i = 0; i < productJson.variants.length; i++) {
                    if(productJson.variants[i].id == variantInput){
                        var productPrice = productJson.variants[i].price;
                        var variantSku = productJson.variants[i].sku;
                        var variantName = productJson.variants[i].public_title;
                    }
                }

                var found_qty = [];

                window.findQty = function(attr_obj) {
                    found_qty = [];
                    for (var k in attr_obj) {
                        if (attr_obj.hasOwnProperty(k)) {
                            var attribute_name = k;
                            var attribute_values = attr_obj[k];
                            var qtyEl = document.querySelector('['+attribute_name+'="'+attribute_values+'"]');
                            if(qtyEl && qtyEl.value){
                                found_qty.push(qtyEl.value);
                            }
                        }
                    }
                }

                window.findQty(analyzify.product_quantity);

                if (found_qty.length > 0) {
                    var prodQty = found_qty[0];
                } else{
                    var prodQty = 1;
                }

                window.dataLayer.push({
                    event: 'ee_addToCart',
                    product_name: productName,
                    product_id: productId,
                    product_price: (productPrice / 100).toFixed(2).toString(),
                    currency: detected_currency,
                    product_brand: productBrand,
                    product_type: productType,
                    category_id: collectionId,
                    category_title: collectionTitle,
                    quantity: prodQty,
                    variant_id: variantInput,
                    variant_title: variantName,
                    product_sku : variantSku,
                    g_product_id: `shopify_`+ analyzify.g_feed_region +`_`+productId+`_`+variantInput
                });

                // alert('weeeeee3'+window.dataLayer);
                // console.log(window.dataLayer);
                analyzify.log("Product ee_addToCart==>");
                analyzify.log(window.dataLayer);
            }

            window.analyzify.collAtcEventFunc = function(){
                {{collectionInfos}}
                var formElement = found_atc_element_form[0];
                var possibleIDs = [];
                var addedProduct = [];

                if(formElement){
                    if(formElement.querySelector('.pid')){
                        var productId = formElement.querySelector('.pid').value;

                        addedProduct = collectionAllProducts.filter(function(product) {
                            return product.id == Number(productId);
                        });
                    } else{
                        const attrValues = formElement
                            .getAttributeNames()
                            .map(name => formElement.getAttribute(name));

                        attrValues.forEach((formElement) => {
                            if(formElement.match(/([0-9]+)/g)){
                                possibleIDs.push(formElement.match(/([0-9]+)/g));
                            }
                        });

                        possibleIDs.forEach((possibleID) => {
                            possibleID.forEach((id) => {
                                collectionAllProducts.filter(function(product) {
                                    if (product.id == Number(id)){
                                        addedProduct.push(product);
                                    }
                                });
                            })
                        })
                    }

                    if (addedProduct.length == 0 ) return analyzify.log("Parent form element found but product id did not matched");
                    window.dataLayer.push({
                        event: 'ee_addToCart',
                        product_name: addedProduct[0].title,
                        product_id : addedProduct[0].id.toString(),
                        product_price: (addedProduct[0].price / 100).toFixed(2).toString(),
                        product_brand: addedProduct[0].vendor,
                        currency: detected_currency,
                        product_type: addedProduct[0].type,
                        category_id: collectionId,
                        category_title: collectionTitle,
                        variant_id: addedProduct[0].variants[0].id,
                        variant_title: addedProduct[0].variants[0].title,
                        product_sku: addedProduct[0].variants[0].sku
                    });
                    // alert('weeeeee2');
                    // console.log(window.dataLayer);
                    analyzify.log("Product ee_addToCart==>");
                    analyzify.log(window.dataLayer);
                } else {
                    analyzify.log("Parent form element not found for quick view atc");
                }
            }

            window.analyzify.quickViewAtcEventFunc = function(event){
                var formElement = event.target.closest('form');
                if(formElement !== null){
                    var ptitle = formElement.querySelector('.ptitle')
                    if(ptitle !== null){
                        if (formElement.querySelector('input[name="quantity"]')){
                            quantity = formElement.querySelector('input[name="quantity"]').value
                        }else{
                            quantity = 1
                        }

                        window.dataLayer.push({
                            event: 'ee_addToCart',
                            product_name: formElement.querySelector('.ptitle').value,
                            product_id : formElement.querySelector('.pid').value,
                            product_price: formElement.querySelector('.pprice').value,
                            product_brand: formElement.querySelector('.pbrand').value,
                            currency: detected_currency,
                            product_type: formElement.querySelector('.ptype').value,
                            category_id: formElement.querySelector('.pcategory_id').value,
                            category_title: formElement.querySelector('.pcategory_name').value,
                            variant_id: formElement.querySelector('*[name="id"]').value,
                            variant_title: formElement.querySelector('.pvtitle').value,
                            product_sku: formElement.querySelector('.psku').value,
                            quantity: quantity,
                            atc_loc: formElement.querySelector('.atc_loc').value
                        });

                        var name = "atcloc";
                        var thisCookie = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
                        if (thisCookie){
                            var newCookieVal = thisCookie[2] + "::"+formElement.querySelector('.psku').value+":"+formElement.querySelector('.atc_loc').value;
                        }else{
                            var newCookieVal = formElement.querySelector('.psku').value+":"+formElement.querySelector('.atc_loc').value;
                        }
                        document.cookie = "atcloc="+newCookieVal+"; expires=0; path=/";

                        // alert('weeeeee1new');

                        console.log(window.dataLayer);
                    }
                }
            }

            window.analyzify.quickShopAtcEventFunc = function(event){
                var atcBtn = event.target.closest('button');
                if(atcBtn !== null && atcBtn.hasAttribute('data-ptitle')){
                    window.dataLayer.push({
                        event: 'ee_addToCart',
                        product_name: atcBtn.getAttribute('data-ptitle'),
                        product_id : atcBtn.getAttribute('data-pid'),
                        product_price: atcBtn.getAttribute('data-pprice'),
                        product_brand: atcBtn.getAttribute('data-pbrand'),
                        currency: detected_currency,
                        product_type: atcBtn.getAttribute('data-ptype'),
                        category_id: atcBtn.getAttribute('data-pcategory_id'),
                        category_title: atcBtn.getAttribute('data-pcategory_name'),
                        variant_id: atcBtn.getAttribute('data-vid'),
                        variant_title: atcBtn.getAttribute('data-pvtitle'),
                        product_sku: atcBtn.getAttribute('data-psku'),
                        quantity: 1,
                        atc_loc: atcBtn.getAttribute('data-atc_loc')
                    });

                    var name = "atcloc";
                    var thisCookie = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
                    if (thisCookie){
                        var newCookieVal = thisCookie[2] + "::"+atcBtn.getAttribute('data-psku')+":"+atcBtn.getAttribute('data-atc_loc');
                    }else{
                        var newCookieVal = atcBtn.getAttribute('data-psku')+":"+atcBtn.getAttribute('data-atc_loc');
                    }
                    document.cookie = "atcloc="+newCookieVal+"; expires=0; path=/";

                    // alert('weeeeee5'+atcBtn.getAttribute('data-psku'));
                    // console.log(window.dataLayer);
                }
            }

            {% case template_name %}
            {% when 'collection' %}

            {% when 'search' %}

            {% when 'product' %}

            {% when 'cart' %}

            {% endcase %}

        }
    }

    analyzify.Initialize();
    analyzify.loadScript(function() {
        analyzify.AppStart();
    });
</script>