<script>
    function compactpic(orgimglink){
        var newImg = orgimglink.replace('.jpg','_compact.jpg')
        return newImg;
    }
  (function(algolia) {
    'use strict';

    algolia.productTemplate = function productTemplate({ item, html, components, insights }, distinct, itemLink, getConversionData) {
      return html `<a
              href="${itemLink}"
              class="aa-ItemLink aa-ProductItem"
              onClick="${(event) => getConversionData(event, item)}"
      >
          <div class="aa-ItemContent">
              <div class="aa-ItemPicture aa-ItemPicture--loaded">
                  <img src="${item.variants_count > 1 ? html `${compactpic(item.product_image)}` : html `${algolia.helpers.compactImage(item)}`}" alt="${item.title}" />
              </div>
              <div class="aa-ItemContentBody">
                  {% comment %}<div class="aa-ItemContentBrand">
                      ${item.product_type && components.Highlight({ hit: item, attribute: 'product_type' })}
                      ${item.vendor && html`<span> by </span>`}
                      ${item.vendor && components.Highlight({ hit: item, attribute: 'vendor' })}
                  </div>{% endcomment %}
                  <div class="aa-ItemContentTitleWrapper">
                      <div class="aa-ItemContentTitle">
                          ${components.Highlight({ hit: item, attribute: 'title' })}
                          <span class="algolia-variant">
                            ${algolia.helpers.variantTitleAddition (item, distinct)}
                          </span>
                      </div>
                  </div>
                  <div class="aa-ItemContentPrice">
                      <div class="aa-ItemContentPriceCurrent">
                      ${item.meta.plytix.package_products ? html`
                        ${item.meta.plytix.bundle_pricing > 0 ? html `<span class="bundle-price">${priceFormat(item.meta.plytix.bundle_pricing)}</span>`: html `<span class="bundle-price">See Product Page {% render 'icon-chevron-right' %}</span>`}
                      `: html `<span class="norm-price">${algolia.helpers.displayPrice(item, distinct)}</span>`}
                          {% comment %}${algolia.helpers.displayPrice(item, distinct)}{% endcomment %}
                      </div>
                  </div>
              </div>
          </div>
      </a>`
    };
  })(window.algoliaShopify);


  function priceFormat(bundleprice){
      thisPrice = parseFloat(bundleprice);
      thisPrice = "$"+thisPrice.toLocaleString("en-US", {minimumFractionDigits: 2, maximumFractionDigits: 2});
      return thisPrice;
  }
</script>